<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Neetcode - Duplicate Integer</title>
    <url>/My-Blog/2024/10/09/Neetcode-Duplicate-Integer/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/My-Blog/assets/css/APlayer.min.css"><script src="/My-Blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Given an integer array nums, return true if any value appears more than once in the array, otherwise return false.</p>
<h4 id="Example-1"><a href="#Example-1" class="headerlink" title="Example 1"></a>Example 1</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>text</span></figcaption><table><tr><td class="code"><pre><span class="line">Input: nums = [1, 2, 3, 3]</span><br><span class="line"></span><br><span class="line">Output: true</span><br></pre></td></tr></table></figure></div>

<h4 id="Example-2"><a href="#Example-2" class="headerlink" title="Example 2"></a>Example 2</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>text</span></figcaption><table><tr><td class="code"><pre><span class="line">Input: nums = [1, 2, 3, 4]</span><br><span class="line"></span><br><span class="line">Output: false</span><br></pre></td></tr></table></figure></div>

<h2 id="Note-Code"><a href="#Note-Code" class="headerlink" title="Note &amp; Code"></a>Note &amp; Code</h2>
  <div class="note p-4 mb-4 rounded-small default">
    <p>LeetCode會自動生成測試案例和測試框架，因此只要寫處理問題的class就好。（NeetCode同理）</p>

  </div>

<h4 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h4><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span>&#123;</span><br><span class="line">	<span class="keyword">public</span>:</span><br><span class="line">		<span class="function"><span class="type">bool</span> <span class="title">containsDuplicate</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; nums)</span></span>&#123;</span><br><span class="line">			unordered_set&lt;<span class="type">int</span>&gt; hushset;</span><br><span class="line">		</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span> ; i&lt;nums.<span class="built_in">size</span>() ; i++)&#123;</span><br><span class="line">				<span class="keyword">if</span>(hushset.<span class="built_in">count</span>(nums[i]))&#123;</span><br><span class="line">					<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			</span><br><span class="line">			hushset.<span class="built_in">insert</span>(num[i]);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></div>
]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Neetcode</tag>
        <tag>Coding</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa 10041 - Vito&#39;s Family</title>
    <url>/My-Blog/2024/10/09/UVa10041/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/My-Blog/assets/css/APlayer.min.css"><script src="/My-Blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><a class="link"   href="https://onlinejudge.org/index.php?option=com_onlinejudge&Itemid=8&page=show_problem&problem=982"  title="Title">10041 - Vito’s Family <i class="fa-regular fa-arrow-up-right-from-square fa-sm"></i></a></p>
<h2 id="題意"><a href="#題意" class="headerlink" title="題意"></a>題意</h2><p>某黑幫老大要搬家到有他所有家人居住的一條街上，因為他會經常拜訪所有親戚，需找到一個能讓他總路程最少的地方居住。你需要找到這個地方，並輸出黑幫老大到每個家人家的距離總和。</p>
<h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2>
  <div class="note p-4 mb-4 rounded-small default">
    <p>因為是找最短距離，所以必須要用「中位數」而不是「平均數」，假如親戚分別住 1,2,100，用平均數總距離就會更遠。</p>

  </div>
<p>我用vector把所有輸入的數存起來，因為無法確定會不會按照大小排序，輸入完成後，用sort將vector內容由小到大排序。<br>接下來判斷vector長度是否為偶數，再找出中位數。<br>找出中位數後就容易了～把所有vector裡的元素和中位數相減，取絕對值，就能得到答案。</p>
<h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> cas,n,temp,center,sum;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; num;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;cas);</span><br><span class="line">    <span class="keyword">while</span>(cas--)&#123;</span><br><span class="line">        sum=<span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;temp);</span><br><span class="line">            num.<span class="built_in">push_back</span>(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">sort</span>(num.<span class="built_in">begin</span>(),num.<span class="built_in">end</span>());</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(num.<span class="built_in">size</span>()%<span class="number">2</span>==<span class="number">0</span>) center = (num[n/<span class="number">2</span><span class="number">-1</span>]+num[n/<span class="number">2</span>])/<span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> center = num[n/<span class="number">2</span>];</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;n;i++) sum+=<span class="built_in">abs</span>(num[i]-center);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,sum);</span><br><span class="line">        </span><br><span class="line">        num.<span class="built_in">clear</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Coding</tag>
        <tag>UVa</tag>
      </tags>
  </entry>
  <entry>
    <title>UVa 10055 - Hashmat the Brave Warrior</title>
    <url>/My-Blog/2024/10/09/UVa10055/</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/My-Blog/assets/css/APlayer.min.css"><script src="/My-Blog/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="Problem"><a href="#Problem" class="headerlink" title="Problem"></a>Problem</h2><p>Hashmat is a brave warrior who with his group of young soldiers moves from one place to another to fight against his opponents. Before Fighting he just calculates one thing, the difference between his soldier number and the opponent’s soldier number. From this difference he decides whether to fight or not. Hashmat’s soldier number is never greater than his opponent.</p>
<h4 id="Input"><a href="#Input" class="headerlink" title="Input"></a>Input</h4><p>The input contains two numbers in every line. These two numbers in each line denotes the number soldiers in Hashmat’s army and his opponent’s army or vice versa. The input numbers are not greater than 232. Input is terminated by ‘End of File’.</p>
<h4 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h4><p>For each line of input, print the difference of number of soldiers between Hashmat’s army and his opponent’s army. Each output should be in seperate line.</p>
<h4 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>text</span></figcaption><table><tr><td class="code"><pre><span class="line">10 12</span><br><span class="line">10 14</span><br><span class="line">100 200</span><br></pre></td></tr></table></figure></div>
<h4 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h4><div class="highlight-container" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><figcaption><span>text</span></figcaption><table><tr><td class="code"><pre><span class="line">2</span><br><span class="line">4</span><br><span class="line">100</span><br></pre></td></tr></table></figure></div>

<h2 id="Note-Code"><a href="#Note-Code" class="headerlink" title="Note &amp; Code"></a>Note &amp; Code</h2><h4 id="My-Code"><a href="#My-Code" class="headerlink" title="My Code"></a>My Code</h4><div class="highlight-container" data-rel="Cpp"><figure class="iseeu highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> n1,n2;</span><br><span class="line">    <span class="keyword">while</span>(cin&gt;&gt;n1&gt;&gt;n2)&#123;</span><br><span class="line">        <span class="keyword">if</span>(n1&gt;n2) <span class="built_in">swap</span>(n1,n2);</span><br><span class="line">        cout&lt;&lt;n2-n1&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></div>]]></content>
      <categories>
        <category>Programming</category>
      </categories>
      <tags>
        <tag>Coding</tag>
        <tag>UVa</tag>
      </tags>
  </entry>
</search>
